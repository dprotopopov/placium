@using System.Collections
@model MySql.QueryTools.WebApp.Models.QueryViewModel

@{
    ViewData["Title"] = "Query Page";
}

<div class="text-center">
    @using (Html.BeginForm("Index", "Query", FormMethod.Get, new { onsubmit = "return onSubmitHandler(this);" }))
    {
        @Html.Hidden("q")
        <pre id="editor" style="height: 5em;">@Model?.Query</pre>
        <script src="~/lib/ace-builds-master/src/ace.js"></script>
        <script src="~/lib/ace-builds-master/src/theme-github.js"></script>
        <script src="~/lib/ace-builds-master/src/mode-sql.js"></script>
        <script>
            editor = ace.edit("editor");
            editor.setTheme("ace/theme/github");
            editor.session.setMode("ace/mode/sql");
            document.getElementById("editor").style.fontSize = "1.25em";
        </script>
        <p>
            <input type="submit"/>
        </p>
    }
    <script>
        function onSubmitHandler(form) {
            document.getElementById("q").value = editor.getValue();
            return true;
        }
    </script>

    @if (Model?.Items != null)
    {
        <div id="wrapper"></div>
        <link href="~/lib/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
        <script src="~/lib/gridjs/dist/gridjs.umd.js"></script>
        <script>
            var columns = [];

            @foreach (var d in Model.Headers)
            {
                @:columns.push({ name: "@d", formatter: (cell) => gridjs.html(cell)});
            }
            var data = [];

            @foreach (var r in Model.Items)
            {
                @:var row = [];

                @foreach (var d in (ArrayList)r)
                {
                    @:row.push("@d");
                }
                @:data.push(row);
            }

            new gridjs.Grid({
                columns: columns,
                data: data,
                height: "calc(100vh - 25em)"
            }).render(document.getElementById("wrapper"));
        </script>
    }

    <div style="height: 2em; overflow: auto; width: 100%;">
        @Html.DisplayTextFor(m => m.Error)
    </div>
</div>